// These declarations are GENERATED by LED_rasters.pl. Normal rasters.
namespace Raster5x7Font_gOem5x7Font{
    const uint8_t rasters[] = {
 0x00, 0x00, 0x00, 0x00, 0x00, // " " aka: 0x20
 0x00, 0x5F, 0x00, 0x00, 0x00, // "!" aka: 0x21
 0x00, 0x03, 0x00, 0x03, 0x00, // "'" aka: 0x22
 0x14, 0x7F, 0x14, 0x7F, 0x14, // "#" aka: 0x23
 0x24, 0x2A, 0x7F, 0x2A, 0x12, // "$" aka: 0x24
 0x23, 0x13, 0x08, 0x64, 0x62, // "%" aka: 0x25
 0x36, 0x49, 0x56, 0x20, 0x50, // "&" aka: 0x26
 0x00, 0x0B, 0x07, 0x00, 0x00, // """ aka: 0x27
 0x00, 0x00, 0x3E, 0x41, 0x00, // "(" aka: 0x28
 0x00, 0x41, 0x3E, 0x00, 0x00, // ")" aka: 0x29
 0x08, 0x2A, 0x1C, 0x2A, 0x08, // "*" aka: 0x2A
 0x08, 0x08, 0x3E, 0x08, 0x08, // "+" aka: 0x2B
 0x00, 0x58, 0x38, 0x00, 0x00, // "," aka: 0x2C
 0x08, 0x08, 0x08, 0x08, 0x08, // "-" aka: 0x2D
 0x00, 0x30, 0x30, 0x00, 0x00, // "." aka: 0x2E
 0x20, 0x10, 0x08, 0x04, 0x02, // "/" aka: 0x2F
 0x3E, 0x51, 0x49, 0x45, 0x3E, // "0" aka: 0x30
 0x00, 0x42, 0x7F, 0x40, 0x00, // "1" aka: 0x31
 0x62, 0x51, 0x49, 0x49, 0x46, // "2" aka: 0x32
 0x22, 0x41, 0x49, 0x49, 0x36, // "3" aka: 0x33
 0x18, 0x14, 0x12, 0x7F, 0x10, // "4" aka: 0x34
 0x27, 0x45, 0x45, 0x45, 0x39, // "5" aka: 0x35
 0x3C, 0x4A, 0x49, 0x49, 0x30, // "6" aka: 0x36
 0x01, 0x71, 0x09, 0x05, 0x03, // "7" aka: 0x37
 0x36, 0x49, 0x49, 0x49, 0x36, // "8" aka: 0x38
 0x06, 0x49, 0x49, 0x29, 0x1E, // "9" aka: 0x39
 0x00, 0x36, 0x36, 0x00, 0x00, // ":" aka: 0x3A
 0x00, 0x5B, 0x3B, 0x00, 0x00, // ";" aka: 0x3B
 0x00, 0x08, 0x14, 0x22, 0x41, // "<" aka: 0x3C
 0x14, 0x14, 0x14, 0x14, 0x14, // "=" aka: 0x3D
 0x41, 0x22, 0x14, 0x08, 0x00, // ">" aka: 0x3E
 0x02, 0x01, 0x51, 0x09, 0x06, // "?" aka: 0x3F
 0x3E, 0x41, 0x5D, 0x55, 0x1E, // "@" aka: 0x40
 0x7E, 0x09, 0x09, 0x09, 0x7E, // "A" aka: 0x41
 0x7E, 0x49, 0x49, 0x49, 0x36, // "B" aka: 0x42
 0x3E, 0x41, 0x41, 0x41, 0x22, // "C" aka: 0x43
 0x7F, 0x41, 0x41, 0x41, 0x3E, // "D" aka: 0x44
 0x7F, 0x49, 0x49, 0x49, 0x41, // "E" aka: 0x45
 0x7F, 0x09, 0x09, 0x09, 0x01, // "F" aka: 0x46
 0x3E, 0x41, 0x41, 0x51, 0x32, // "G" aka: 0x47
 0x7F, 0x08, 0x08, 0x08, 0x7F, // "H" aka: 0x48
 0x00, 0x41, 0x7F, 0x41, 0x00, // "I" aka: 0x49
 0x20, 0x40, 0x40, 0x40, 0x3F, // "J" aka: 0x4A
 0x7F, 0x08, 0x14, 0x22, 0x41, // "K" aka: 0x4B
 0x7F, 0x40, 0x40, 0x40, 0x40, // "L" aka: 0x4C
 0x7F, 0x02, 0x0C, 0x02, 0x7F, // "M" aka: 0x4D
 0x7F, 0x04, 0x08, 0x10, 0x7F, // "N" aka: 0x4E
 0x3E, 0x41, 0x41, 0x41, 0x3E, // "O" aka: 0x4F
 0x7F, 0x09, 0x09, 0x09, 0x06, // "P" aka: 0x50
 0x3E, 0x41, 0x51, 0x21, 0x5E, // "Q" aka: 0x51
 0x7F, 0x09, 0x19, 0x29, 0x46, // "R" aka: 0x52
 0x26, 0x49, 0x49, 0x49, 0x32, // "S" aka: 0x53
 0x01, 0x01, 0x7F, 0x01, 0x01, // "T" aka: 0x54
 0x3F, 0x40, 0x40, 0x40, 0x3F, // "U" aka: 0x55
 0x07, 0x18, 0x60, 0x18, 0x07, // "V" aka: 0x56
 0x7F, 0x20, 0x18, 0x20, 0x7F, // "W" aka: 0x57
 0x63, 0x14, 0x08, 0x14, 0x63, // "X" aka: 0x58
 0x03, 0x04, 0x78, 0x04, 0x03, // "Y" aka: 0x59
 0x61, 0x51, 0x49, 0x45, 0x43, // "Z" aka: 0x5A
 0x00, 0x00, 0x7F, 0x41, 0x41, // "[" aka: 0x5B
 0x02, 0x04, 0x08, 0x10, 0x20, // "\" aka: 0x5C
 0x41, 0x41, 0x7F, 0x00, 0x00, // "]" aka: 0x5D
 0x04, 0x02, 0x7F, 0x02, 0x04, // "-" aka: 0x5E
 0x40, 0x40, 0x40, 0x40, 0x40, // "_" aka: 0x5F
 0x00, 0x07, 0x0B, 0x00, 0x00, // "`" aka: 0x60
 0x38, 0x44, 0x44, 0x3C, 0x40, // "a" aka: 0x61
 0x7F, 0x48, 0x44, 0x44, 0x38, // "b" aka: 0x62
 0x38, 0x44, 0x44, 0x44, 0x44, // "c" aka: 0x63
 0x38, 0x44, 0x44, 0x48, 0x7F, // "d" aka: 0x64
 0x38, 0x54, 0x54, 0x54, 0x08, // "e" aka: 0x65
 0x08, 0x7E, 0x09, 0x02, 0x00, // "f" aka: 0x66
 0x08, 0x14, 0x54, 0x54, 0x3C, // "g" aka: 0x67
 0x7F, 0x08, 0x04, 0x04, 0x78, // "h" aka: 0x68
 0x00, 0x44, 0x7D, 0x40, 0x00, // "i" aka: 0x69
 0x20, 0x40, 0x44, 0x3D, 0x00, // "j" aka: 0x6A
 0x00, 0x7F, 0x10, 0x28, 0x44, // "k" aka: 0x6B
 0x00, 0x41, 0x7F, 0x40, 0x00, // "l" aka: 0x6C
 0x78, 0x04, 0x18, 0x04, 0x78, // "m" aka: 0x6D
 0x7C, 0x08, 0x04, 0x04, 0x78, // "n" aka: 0x6E
 0x38, 0x44, 0x44, 0x44, 0x38, // "o" aka: 0x6F
 0x7C, 0x14, 0x24, 0x24, 0x18, // "p" aka: 0x70
 0x18, 0x24, 0x14, 0x7C, 0x40, // "q" aka: 0x71
 0x00, 0x7C, 0x08, 0x04, 0x04, // "r" aka: 0x72
 0x48, 0x54, 0x54, 0x54, 0x20, // "s" aka: 0x73
 0x04, 0x3E, 0x44, 0x20, 0x00, // "t" aka: 0x74
 0x3C, 0x40, 0x40, 0x20, 0x7C, // "u" aka: 0x75
 0x1C, 0x20, 0x40, 0x20, 0x1C, // "v" aka: 0x76
 0x3C, 0x40, 0x30, 0x40, 0x3C, // "w" aka: 0x77
 0x44, 0x28, 0x10, 0x28, 0x44, // "x" aka: 0x78
 0x04, 0x48, 0x30, 0x08, 0x04, // "y" aka: 0x79
 0x44, 0x64, 0x54, 0x4C, 0x44, // "z" aka: 0x7A
 0x00, 0x08, 0x36, 0x41, 0x00, // "{" aka: 0x7B
 0x00, 0x00, 0x77, 0x00, 0x00, // "|" aka: 0x7C
 0x00, 0x41, 0x36, 0x08, 0x00, // "}" aka: 0x7D
 0x08, 0x04, 0x08, 0x10, 0x08, // "~" aka: 0x7E
};}
Raster5x7Font gOem5x7Font({
    0x20, // index of first font character
    95, // number of characters in this font
    Raster5x7Font_gOem5x7Font::rasters});

// These declarations are GENERATED by LED_rasters.pl. Flipped up/down rasters.
namespace Raster5x7Font_gOem5x7FontFlipped{
    const uint8_t rasters[] = {
 0x00, 0x00, 0x00, 0x00, 0x00, // " " aka: 0x20
 0x00, 0x7d, 0x00, 0x00, 0x00, // "!" aka: 0x21
 0x00, 0x60, 0x00, 0x60, 0x00, // "'" aka: 0x22
 0x14, 0x7f, 0x14, 0x7f, 0x14, // "#" aka: 0x23
 0x12, 0x2a, 0x7f, 0x2a, 0x24, // "$" aka: 0x24
 0x62, 0x64, 0x08, 0x13, 0x23, // "%" aka: 0x25
 0x36, 0x49, 0x35, 0x02, 0x05, // "&" aka: 0x26
 0x00, 0x68, 0x70, 0x00, 0x00, // """ aka: 0x27
 0x00, 0x00, 0x3e, 0x41, 0x00, // "(" aka: 0x28
 0x00, 0x41, 0x3e, 0x00, 0x00, // ")" aka: 0x29
 0x08, 0x2a, 0x1c, 0x2a, 0x08, // "*" aka: 0x2A
 0x08, 0x08, 0x3e, 0x08, 0x08, // "+" aka: 0x2B
 0x00, 0x0d, 0x0e, 0x00, 0x00, // "," aka: 0x2C
 0x08, 0x08, 0x08, 0x08, 0x08, // "-" aka: 0x2D
 0x00, 0x06, 0x06, 0x00, 0x00, // "." aka: 0x2E
 0x02, 0x04, 0x08, 0x10, 0x20, // "/" aka: 0x2F
 0x3e, 0x45, 0x49, 0x51, 0x3e, // "0" aka: 0x30
 0x00, 0x21, 0x7f, 0x01, 0x00, // "1" aka: 0x31
 0x23, 0x45, 0x49, 0x49, 0x31, // "2" aka: 0x32
 0x22, 0x41, 0x49, 0x49, 0x36, // "3" aka: 0x33
 0x0c, 0x14, 0x24, 0x7f, 0x04, // "4" aka: 0x34
 0x72, 0x51, 0x51, 0x51, 0x4e, // "5" aka: 0x35
 0x1e, 0x29, 0x49, 0x49, 0x06, // "6" aka: 0x36
 0x40, 0x47, 0x48, 0x50, 0x60, // "7" aka: 0x37
 0x36, 0x49, 0x49, 0x49, 0x36, // "8" aka: 0x38
 0x30, 0x49, 0x49, 0x4a, 0x3c, // "9" aka: 0x39
 0x00, 0x36, 0x36, 0x00, 0x00, // ":" aka: 0x3A
 0x00, 0x6d, 0x6e, 0x00, 0x00, // ";" aka: 0x3B
 0x00, 0x08, 0x14, 0x22, 0x41, // "<" aka: 0x3C
 0x14, 0x14, 0x14, 0x14, 0x14, // "=" aka: 0x3D
 0x41, 0x22, 0x14, 0x08, 0x00, // ">" aka: 0x3E
 0x20, 0x40, 0x45, 0x48, 0x30, // "?" aka: 0x3F
 0x3e, 0x41, 0x5d, 0x55, 0x3c, // "@" aka: 0x40
 0x3f, 0x48, 0x48, 0x48, 0x3f, // "A" aka: 0x41
 0x3f, 0x49, 0x49, 0x49, 0x36, // "B" aka: 0x42
 0x3e, 0x41, 0x41, 0x41, 0x22, // "C" aka: 0x43
 0x7f, 0x41, 0x41, 0x41, 0x3e, // "D" aka: 0x44
 0x7f, 0x49, 0x49, 0x49, 0x41, // "E" aka: 0x45
 0x7f, 0x48, 0x48, 0x48, 0x40, // "F" aka: 0x46
 0x3e, 0x41, 0x41, 0x45, 0x26, // "G" aka: 0x47
 0x7f, 0x08, 0x08, 0x08, 0x7f, // "H" aka: 0x48
 0x00, 0x41, 0x7f, 0x41, 0x00, // "I" aka: 0x49
 0x02, 0x01, 0x01, 0x01, 0x7e, // "J" aka: 0x4A
 0x7f, 0x08, 0x14, 0x22, 0x41, // "K" aka: 0x4B
 0x7f, 0x01, 0x01, 0x01, 0x01, // "L" aka: 0x4C
 0x7f, 0x20, 0x18, 0x20, 0x7f, // "M" aka: 0x4D
 0x7f, 0x10, 0x08, 0x04, 0x7f, // "N" aka: 0x4E
 0x3e, 0x41, 0x41, 0x41, 0x3e, // "O" aka: 0x4F
 0x7f, 0x48, 0x48, 0x48, 0x30, // "P" aka: 0x50
 0x3e, 0x41, 0x45, 0x42, 0x3d, // "Q" aka: 0x51
 0x7f, 0x48, 0x4c, 0x4a, 0x31, // "R" aka: 0x52
 0x32, 0x49, 0x49, 0x49, 0x26, // "S" aka: 0x53
 0x40, 0x40, 0x7f, 0x40, 0x40, // "T" aka: 0x54
 0x7e, 0x01, 0x01, 0x01, 0x7e, // "U" aka: 0x55
 0x70, 0x0c, 0x03, 0x0c, 0x70, // "V" aka: 0x56
 0x7f, 0x02, 0x0c, 0x02, 0x7f, // "W" aka: 0x57
 0x63, 0x14, 0x08, 0x14, 0x63, // "X" aka: 0x58
 0x60, 0x10, 0x0f, 0x10, 0x60, // "Y" aka: 0x59
 0x43, 0x45, 0x49, 0x51, 0x61, // "Z" aka: 0x5A
 0x00, 0x00, 0x7f, 0x41, 0x41, // "[" aka: 0x5B
 0x20, 0x10, 0x08, 0x04, 0x02, // "\" aka: 0x5C
 0x41, 0x41, 0x7f, 0x00, 0x00, // "]" aka: 0x5D
 0x10, 0x20, 0x7f, 0x20, 0x10, // "-" aka: 0x5E
 0x01, 0x01, 0x01, 0x01, 0x01, // "_" aka: 0x5F
 0x00, 0x70, 0x68, 0x00, 0x00, // "`" aka: 0x60
 0x0e, 0x11, 0x11, 0x1e, 0x01, // "a" aka: 0x61
 0x7f, 0x09, 0x11, 0x11, 0x0e, // "b" aka: 0x62
 0x0e, 0x11, 0x11, 0x11, 0x11, // "c" aka: 0x63
 0x0e, 0x11, 0x11, 0x09, 0x7f, // "d" aka: 0x64
 0x0e, 0x15, 0x15, 0x15, 0x08, // "e" aka: 0x65
 0x08, 0x3f, 0x48, 0x20, 0x00, // "f" aka: 0x66
 0x08, 0x14, 0x15, 0x15, 0x1e, // "g" aka: 0x67
 0x7f, 0x08, 0x10, 0x10, 0x0f, // "h" aka: 0x68
 0x00, 0x11, 0x5f, 0x01, 0x00, // "i" aka: 0x69
 0x02, 0x01, 0x11, 0x5e, 0x00, // "j" aka: 0x6A
 0x00, 0x7f, 0x04, 0x0a, 0x11, // "k" aka: 0x6B
 0x00, 0x41, 0x7f, 0x01, 0x00, // "l" aka: 0x6C
 0x0f, 0x10, 0x0c, 0x10, 0x0f, // "m" aka: 0x6D
 0x1f, 0x08, 0x10, 0x10, 0x0f, // "n" aka: 0x6E
 0x0e, 0x11, 0x11, 0x11, 0x0e, // "o" aka: 0x6F
 0x1f, 0x14, 0x12, 0x12, 0x0c, // "p" aka: 0x70
 0x0c, 0x12, 0x14, 0x1f, 0x01, // "q" aka: 0x71
 0x00, 0x1f, 0x08, 0x10, 0x10, // "r" aka: 0x72
 0x09, 0x15, 0x15, 0x15, 0x02, // "s" aka: 0x73
 0x10, 0x3e, 0x11, 0x02, 0x00, // "t" aka: 0x74
 0x1e, 0x01, 0x01, 0x02, 0x1f, // "u" aka: 0x75
 0x1c, 0x02, 0x01, 0x02, 0x1c, // "v" aka: 0x76
 0x1e, 0x01, 0x06, 0x01, 0x1e, // "w" aka: 0x77
 0x11, 0x0a, 0x04, 0x0a, 0x11, // "x" aka: 0x78
 0x10, 0x09, 0x06, 0x08, 0x10, // "y" aka: 0x79
 0x11, 0x13, 0x15, 0x19, 0x11, // "z" aka: 0x7A
 0x00, 0x08, 0x36, 0x41, 0x00, // "{" aka: 0x7B
 0x00, 0x00, 0x77, 0x00, 0x00, // "|" aka: 0x7C
 0x00, 0x41, 0x36, 0x08, 0x00, // "}" aka: 0x7D
 0x08, 0x10, 0x08, 0x04, 0x08, // "~" aka: 0x7E
};}
Raster5x7Font gOem5x7FontFlipped({
    0x20, // index of first font character
    95, // number of characters in this font
    Raster5x7Font_gOem5x7FontFlipped::rasters});

// This is a GENERATED file. Do NOT Edit! See 5x7Rasters.cpp
namespace Raster5x7Font_gSmallDigits5x7Font{
    const uint8_t rasters[] = {
// digits 0 through 9
    0x1c, 0x22, 0x22, 0x1c, 0x00, 
    0x00, 0x02, 0x3e, 0x00, 0x00, 
    0x32, 0x2a, 0x2a, 0x24, 0x00, 
    0x22, 0x2a, 0x2a, 0x14, 0x00, 
    0x08, 0x0c, 0x0a, 0x3e, 0x08, 
    0x2e, 0x2a, 0x2a, 0x12, 0x00, 
    0x3e, 0x2a, 0x2a, 0x38, 0x00, 
    0x22, 0x12, 0x0a, 0x06, 0x00, 
    0x14, 0x2a, 0x2a, 0x14, 0x00, 
    0x0e, 0x2a, 0x2a, 0x3e, 0x00, 
// digits 0 through 9 with trailing colon
// starts with character '0' + 0xa
    0x1c, 0x22, 0x22, 0x1c, 0x14, 
    0x00, 0x02, 0x3e, 0x00, 0x14, 
    0x32, 0x2a, 0x2a, 0x24, 0x14, 
    0x22, 0x2a, 0x2a, 0x14, 0x14, 
    0x08, 0x0c, 0x0a, 0x3e, 0x1c, 
    0x2e, 0x2a, 0x2a, 0x12, 0x14, 
    0x3e, 0x2a, 0x2a, 0x38, 0x14, 
    0x22, 0x12, 0x0a, 0x06, 0x14, 
    0x14, 0x2a, 0x2a, 0x14, 0x14, 
    0x0e, 0x2a, 0x2a, 0x3e, 0x14, 
// digits 0 through 9 shifted up a pixel
// starts with character '0' + 0x14
    0x0e, 0x11, 0x11, 0x0e, 0x00, 
    0x00, 0x01, 0x1f, 0x00, 0x00, 
    0x19, 0x15, 0x15, 0x12, 0x00, 
    0x11, 0x15, 0x15, 0x0a, 0x00, 
    0x04, 0x06, 0x05, 0x1f, 0x04, 
    0x17, 0x15, 0x15, 0x09, 0x00, 
    0x1f, 0x15, 0x15, 0x1c, 0x00, 
    0x11, 0x09, 0x05, 0x03, 0x00, 
    0x0a, 0x15, 0x15, 0x0a, 0x00, 
    0x07, 0x15, 0x15, 0x1f, 0x00, 
// digits 0 through 9 with right decimal
// starts with character '0' + 0x1e
    0x0e, 0x11, 0x11, 0x4e, 0x40, 
    0x00, 0x01, 0x1f, 0x40, 0x40, 
    0x19, 0x15, 0x15, 0x52, 0x40, 
    0x11, 0x15, 0x15, 0x4a, 0x40, 
    0x04, 0x06, 0x05, 0x5f, 0x44, 
    0x17, 0x15, 0x15, 0x49, 0x40, 
    0x1f, 0x15, 0x15, 0x5c, 0x40, 
    0x11, 0x09, 0x05, 0x43, 0x40, 
    0x0a, 0x15, 0x15, 0x4a, 0x40, 
    0x07, 0x15, 0x15, 0x5f, 0x40, 
// digits 0 through 9 with left decimal
// starts with character '0' + 0x28
    0x4e, 0x51, 0x11, 0x0e, 0x00, 
    0x40, 0x41, 0x1f, 0x00, 0x00, 
    0x59, 0x55, 0x15, 0x12, 0x00, 
    0x51, 0x55, 0x15, 0x0a, 0x00, 
    0x44, 0x46, 0x05, 0x1f, 0x04, 
    0x57, 0x55, 0x15, 0x09, 0x00, 
    0x5f, 0x55, 0x15, 0x1c, 0x00, 
    0x51, 0x49, 0x05, 0x03, 0x00, 
    0x4a, 0x55, 0x15, 0x0a, 0x00, 
    0x47, 0x55, 0x15, 0x1f, 0x00, 
};}
Raster5x7Font gSmallDigits5x7Font({
    0x30, // index of initial font character
    50, // number of characters in this font
    Raster5x7Font_gSmallDigits5x7Font::rasters});

// This is a GENERATED file. Do NOT Edit! See 5x7Rasters.cpp
namespace Raster5x7Font_gSmallDigits5x7FontFlipped{
    const uint8_t rasters[] = {
// digits 0 through 9
    0x1c, 0x22, 0x22, 0x1c, 0x00, 
    0x00, 0x20, 0x3e, 0x00, 0x00, 
    0x26, 0x2a, 0x2a, 0x12, 0x00, 
    0x22, 0x2a, 0x2a, 0x14, 0x00, 
    0x08, 0x18, 0x28, 0x3e, 0x08, 
    0x3a, 0x2a, 0x2a, 0x24, 0x00, 
    0x3e, 0x2a, 0x2a, 0x0e, 0x00, 
    0x22, 0x24, 0x28, 0x30, 0x00, 
    0x14, 0x2a, 0x2a, 0x14, 0x00, 
    0x38, 0x2a, 0x2a, 0x3e, 0x00, 
// digits 0 through 9 with trailing colon
// starts with character '0' + 0xa
    0x1c, 0x22, 0x22, 0x1c, 0x14, 
    0x00, 0x20, 0x3e, 0x00, 0x14, 
    0x26, 0x2a, 0x2a, 0x12, 0x14, 
    0x22, 0x2a, 0x2a, 0x14, 0x14, 
    0x08, 0x18, 0x28, 0x3e, 0x1c, 
    0x3a, 0x2a, 0x2a, 0x24, 0x14, 
    0x3e, 0x2a, 0x2a, 0x0e, 0x14, 
    0x22, 0x24, 0x28, 0x30, 0x14, 
    0x14, 0x2a, 0x2a, 0x14, 0x14, 
    0x38, 0x2a, 0x2a, 0x3e, 0x14, 
// digits 0 through 9 shifted up a pixel
// starts with character '0' + 0x14
    0x38, 0x44, 0x44, 0x38, 0x00, 
    0x00, 0x40, 0x7c, 0x00, 0x00, 
    0x4c, 0x54, 0x54, 0x24, 0x00, 
    0x44, 0x54, 0x54, 0x28, 0x00, 
    0x10, 0x30, 0x50, 0x7c, 0x10, 
    0x74, 0x54, 0x54, 0x48, 0x00, 
    0x7c, 0x54, 0x54, 0x1c, 0x00, 
    0x44, 0x48, 0x50, 0x60, 0x00, 
    0x28, 0x54, 0x54, 0x28, 0x00, 
    0x70, 0x54, 0x54, 0x7c, 0x00, 
// digits 0 through 9 with right decimal
// starts with character '0' + 0x1e
    0x38, 0x44, 0x44, 0x39, 0x01, 
    0x00, 0x40, 0x7c, 0x01, 0x01, 
    0x4c, 0x54, 0x54, 0x25, 0x01, 
    0x44, 0x54, 0x54, 0x29, 0x01, 
    0x10, 0x30, 0x50, 0x7d, 0x11, 
    0x74, 0x54, 0x54, 0x49, 0x01, 
    0x7c, 0x54, 0x54, 0x1d, 0x01, 
    0x44, 0x48, 0x50, 0x61, 0x01, 
    0x28, 0x54, 0x54, 0x29, 0x01, 
    0x70, 0x54, 0x54, 0x7d, 0x01, 
// digits 0 through 9 with left decimal
// starts with character '0' + 0x28
    0x39, 0x45, 0x44, 0x38, 0x00, 
    0x01, 0x41, 0x7c, 0x00, 0x00, 
    0x4d, 0x55, 0x54, 0x24, 0x00, 
    0x45, 0x55, 0x54, 0x28, 0x00, 
    0x11, 0x31, 0x50, 0x7c, 0x10, 
    0x75, 0x55, 0x54, 0x48, 0x00, 
    0x7d, 0x55, 0x54, 0x1c, 0x00, 
    0x45, 0x49, 0x50, 0x60, 0x00, 
    0x29, 0x55, 0x54, 0x28, 0x00, 
    0x71, 0x55, 0x54, 0x7c, 0x00, 
};}
Raster5x7Font gSmallDigits5x7FontFlipped({
    0x30, // index of initial font character
    50, // number of characters in this font
    Raster5x7Font_gSmallDigits5x7FontFlipped::rasters});

// This is a GENERATED file. Do NOT Edit! See 5x7Rasters.cpp
namespace Raster5x7Font_gDigits7Seg5x7Font{
    const uint8_t rasters[] = {
// digits 0 through 9
    0x7f, 0x41, 0x41, 0x41, 0x7f, 
    0x00, 0x00, 0x00, 0x00, 0x7f, 
    0x79, 0x49, 0x49, 0x49, 0x4f, 
    0x49, 0x49, 0x49, 0x49, 0x7f, 
    0x0f, 0x08, 0x08, 0x08, 0x7f, 
    0x4f, 0x49, 0x49, 0x49, 0x79, 
    0x7f, 0x49, 0x49, 0x49, 0x79, 
    0x01, 0x01, 0x01, 0x01, 0x7f, 
    0x7f, 0x49, 0x49, 0x49, 0x7f, 
    0x4f, 0x49, 0x49, 0x49, 0x7f, 
};}
Raster5x7Font gDigits7Seg5x7Font({
    0x30, // index of initial font character
    10, // number of characters in this font
    Raster5x7Font_gDigits7Seg5x7Font::rasters});

// This is a GENERATED file. Do NOT Edit! See 5x7Rasters.cpp
namespace Raster5x7Font_gDigits7Seg5x7FontFlipped{
    const uint8_t rasters[] = {
// digits 0 through 9
    0x7f, 0x41, 0x41, 0x41, 0x7f, 
    0x00, 0x00, 0x00, 0x00, 0x7f, 
    0x4f, 0x49, 0x49, 0x49, 0x79, 
    0x49, 0x49, 0x49, 0x49, 0x7f, 
    0x78, 0x08, 0x08, 0x08, 0x7f, 
    0x79, 0x49, 0x49, 0x49, 0x4f, 
    0x7f, 0x49, 0x49, 0x49, 0x4f, 
    0x40, 0x40, 0x40, 0x40, 0x7f, 
    0x7f, 0x49, 0x49, 0x49, 0x7f, 
    0x79, 0x49, 0x49, 0x49, 0x7f, 
};}
Raster5x7Font gDigits7Seg5x7FontFlipped({
    0x30, // index of initial font character
    10, // number of characters in this font
    Raster5x7Font_gDigits7Seg5x7FontFlipped::rasters});

